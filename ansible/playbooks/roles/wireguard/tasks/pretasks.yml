---
- name: Create kafka group
  group:
    name: '{{ kafka_group }}'
    state: present

- name: Create kafka user
  user:
    name: '{{ kafka_user }}'
    group: '{{ kafka_group }}'
    state: present
    createhome: no

- name: Set kafka_archive_name variable
  set_fact:
    kafka_archive_name: "kafka_{{ kafka_scala_version }}-{{ kafka_version }}"

- name: Unarchive kafka and zookeeper release package
  unarchive:
    src: "{{ kafka_apache_mirror_base_url }}/kafka/{{ kafka_version }}/{{ kafka_archive_name }}.tgz"
    dest: /usr/local
    remote_src: yes
    creates: "/usr/local/{{ kafka_archive_name }}"

- name: Create a link to unarchived destination
  file:
    src: "/usr/local/{{ kafka_archive_name }}"
    dest: '{{ kafka_install_dir }}'
    owner: '{{ kafka_user }}'
    group: '{{ kafka_group }}'
    state: link

# Facts
- name: Add to kafka_environment_variables variable if it already exists
  set_fact:
    kafka_environment_variables: "{{ kafka_environment_variables | combine({'KAFKA_OPTS': '-Djava.security.auth.login.config=' + kafka_conf_dir + '/jaas.cfg'}) }}"

- name: Set Kafka listeners variable
  set_fact:
    kafka_listeners: "SASL_PLAINTEXT://{{ kafka_host }}:9092"
  #when: kafka_listeners is not defined

- name: Set Kafka inter-broker communication protocol
  set_fact:
    kafka_security_inter_broker_protocol: "SASL_PLAINTEXT"
  when: kafka_security_inter_broker_protocol is not defined

- name: Set SASL mechanism for Kafka inter-broker communication protocol
  set_fact:
    kafka_sasl_mechanism_inter_broker_protocol: "PLAIN"
  when: kafka_sasl_mechanism_inter_broker_protocol is not defined

- name: Set enabled SASL mechanisms for Kafka
  set_fact:
    kafka_sasl_enabled_mechanisms: "PLAIN"
  when: kafka_sasl_enabled_mechanisms is not defined

- name: set fact zookeeper host cluster mode
  set_fact:
    zookeeper_host_scram_generator: "{{ hostvars[zookeeper_cluster[0]]['ansible_local']['network']['int_ip'] }}:{{ zookeeper.adminports }}"
  ignore_errors: '{{ ansible_check_mode }}'
  when: kafka_type == "cluster"

- name: set fact zookeeper single node
  set_fact:
    zookeeper_host_scram_generator: "localhost:{{ zookeeper.adminports }}"
  ignore_errors: '{{ ansible_check_mode }}'
  when: kafka_type == "single_node"

